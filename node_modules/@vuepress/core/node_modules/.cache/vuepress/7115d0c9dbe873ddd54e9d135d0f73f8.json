{"remainingRequest":"/Applications/personal-note/blog/node_modules/vue-loader/lib/index.js??vue-loader-options!/Applications/personal-note/blog/docs/.vuepress/components/one-tree-select.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Applications/personal-note/blog/docs/.vuepress/components/one-tree-select.vue","mtime":1668418280345},{"path":"/Applications/personal-note/blog/node_modules/cache-loader/dist/cjs.js","mtime":1667818948286},{"path":"/Applications/personal-note/blog/node_modules/babel-loader/lib/index.js","mtime":1667818948295},{"path":"/Applications/personal-note/blog/node_modules/cache-loader/dist/cjs.js","mtime":1667818948286},{"path":"/Applications/personal-note/blog/node_modules/vue-loader/lib/index.js","mtime":1668421637991}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnb25lLXRyZWUtc2VsZWN0JywKICBwcm9wczogewogICAgLy8g6YWN572u6aG5CiAgICBwcm9wczogewogICAgICB0eXBlOiBPYmplY3QsCiAgICAgIGRlZmF1bHQ6ICgpID0+IHsKICAgICAgICByZXR1cm4gewogICAgICAgICAgdmFsdWU6ICdpZCcsIC8vIElE5a2X5q615ZCNCiAgICAgICAgICBsYWJlbDogJ3RpdGxlJywgLy8g5pi+56S65ZCN56ewCiAgICAgICAgICBjaGlsZHJlbjogJ2NoaWxkcmVuJywgLy8g5a2Q57qn5a2X5q615ZCNCiAgICAgICAgfQogICAgICB9LAogICAgfSwKICAgIC8vIOmAiemhueWIl+ihqOaVsOaNrijmoJHlvaLnu5PmnoTnmoTlr7nosaHmlbDnu4QpCiAgICBvcHRpb25zOiB7CiAgICAgIHR5cGU6IEFycmF5LAogICAgICBkZWZhdWx0OiAoKSA9PiB7CiAgICAgICAgcmV0dXJuIFtdCiAgICAgIH0sCiAgICB9LAogICAgLy8g5LiL5ouJ5Yid5aeL5YC8CiAgICB2YWx1ZTogewogICAgICB0eXBlOiBTdHJpbmcsCiAgICAgIGRlZmF1bHQ6ICcnLAogICAgfSwKICAgIC8vIOWPr+a4heepuumAiemhuQogICAgY2xlYXJhYmxlOiB7CiAgICAgIHR5cGU6IEJvb2xlYW4sCiAgICAgIGRlZmF1bHQ6IHRydWUsCiAgICB9LAogICAgLy8g5piv5ZCm56aB55SoCiAgICBkaXNhYmxlZDogewogICAgICB0eXBlOiBCb29sZWFuLAogICAgICBkZWZhdWx0OiBmYWxzZSwKICAgIH0sCiAgICAvLyDljaDkvY3nrKblj7cKICAgIHBsYWNlaG9sZGVyOiB7CiAgICAgIHR5cGU6IFN0cmluZywKICAgICAgZGVmYXVsdDogJycsCiAgICB9LAogICAgLy8g5piv5ZCm5pS26LW3CiAgICBhY2NvcmRpb246IHsKICAgICAgdHlwZTogQm9vbGVhbiwKICAgICAgZGVmYXVsdDogZmFsc2UsCiAgICB9LAogIH0sCiAgZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHZhbHVlVGl0bGU6ICcnLCAvLyDkuIvmi4nmoYbmmL7npLrlkI3np7AKICAgICAgdmFsdWVJZDogbnVsbCwgLy8g5Yid5aeLSWQKICAgICAgZGVmYXVsdEV4cGFuZGVkS2V5OiBbXSwgLy8g6buY6K6k5bGV5byA6IqC54K55pWw57uECiAgICB9CiAgfSwKICBtb3VudGVkKCkgewogICAgdGhpcy52YWx1ZUlkID0gdGhpcy52YWx1ZSwgLy8g5Yid5aeL5YC8CiAgICB0aGlzLmluaXRIYW5kbGUoKQogIH0sCiAgbWV0aG9kczogewogICAgLy8g5Yid5aeL5YyWCiAgICBpbml0SGFuZGxlKCkgewogICAgICB0aGlzLnZhbHVlSWQgPSB0aGlzLnZhbHVlCiAgICAgIGlmICh0aGlzLnZhbHVlSWQgJiYgdGhpcy5vcHRpb25zLmxlbmd0aCA+IDApIHsKICAgICAgICB0aGlzLiRuZXh0VGljayhmdW5jdGlvbiAoKSB7CiAgICAgICAgICB0aGlzLnZhbHVlVGl0bGUgPSB0aGlzLiRyZWZzLnNlbGVjdFRyZWUuZ2V0Tm9kZSh0aGlzLnZhbHVlSWQpLmRhdGFbdGhpcy5wcm9wcy5sYWJlbF0gLy8g5Yid5aeL5YyW5pi+56S6bGFiZWwKICAgICAgICAgIHRoaXMuJHJlZnMuc2VsZWN0VHJlZS5zZXRDdXJyZW50S2V5KHRoaXMudmFsdWVJZCkgLy8g6K6+572u6buY6K6k6YCJ5LitCiAgICAgICAgICB0aGlzLmRlZmF1bHRFeHBhbmRlZEtleSA9IFt0aGlzLnZhbHVlSWRdIC8vIOiuvue9rum7mOiupOWxleW8gAogICAgICAgICAgdGhpcy4kZW1pdCgnZ2V0VmFsdWUnLHRoaXMuJHJlZnMuc2VsZWN0VHJlZS5nZXROb2RlKHRoaXMudmFsdWVJZCkuZGF0YSkKICAgICAgICB9KQogICAgICB9CiAgICAgIHRoaXMuaW5pdFNjcm9sbCgpCiAgICB9LAoKICAgIC8vIOWIneWni+WMlua7muWKqOadoQogICAgaW5pdFNjcm9sbCgpIHsKICAgICAgdGhpcy4kbmV4dFRpY2soKCkgPT4gewogICAgICAgIGxldCBzY3JvbGxXcmFwID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLmVsLXNjcm9sbGJhciAuZWwtc2VsZWN0LWRyb3Bkb3duX193cmFwJylbMF0KICAgICAgICBsZXQgc2Nyb2xsQmFyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLmVsLXNjcm9sbGJhciAuZWwtc2Nyb2xsYmFyX19iYXInKQogICAgICAgIHNjcm9sbFdyYXAuc3R5bGUuY3NzVGV4dCA9ICdtYXJnaW46IDBweDsgbWF4LWhlaWdodDogbm9uZTsgb3ZlcmZsb3c6IGhpZGRlbjsnCiAgICAgICAgc2Nyb2xsQmFyLmZvckVhY2goKGVsKSA9PiAoZWwuc3R5bGUud2lkdGggPSAwKSkKICAgICAgfSkKICAgIH0sCiAgICAvLyDliIfmjaLpgInpobkKICAgIGhhbmRsZU5vZGVDbGljayhub2RlKSB7CiAgICAgIHRoaXMudmFsdWVUaXRsZSA9IG5vZGVbdGhpcy5wcm9wcy5sYWJlbF0gLy8g6K6+572ubGFiZWwKICAgICAgdGhpcy52YWx1ZUlkID0gbm9kZVt0aGlzLnByb3BzLmlkXSAvLyDorr7nva5pZAogICAgICB0aGlzLmRlZmF1bHRFeHBhbmRlZEtleSA9IFtdCiAgICAgIHRoaXMuJGVtaXQoJ2dldFZhbHVlJywgbm9kZSkKICAgICAgdGhpcy4kcmVmcy5lbFNlbGVjdC52aXNpYmxlID0gZmFsc2UKICAgIH0sCiAgICAvLyDmuIXpmaTpgInkuK0KICAgIGNsZWFySGFuZGxlKCkgewogICAgICB0aGlzLnZhbHVlVGl0bGUgPSAnJwogICAgICB0aGlzLnZhbHVlSWQgPSBudWxsCiAgICAgIHRoaXMuZGVmYXVsdEV4cGFuZGVkS2V5ID0gW10KICAgICAgdGhpcy5jbGVhclNlbGVjdGVkKCkKICAgICAgdGhpcy4kZW1pdCgnZ2V0VmFsdWUnLCBudWxsKQogICAgfSwKICAgIC8vIOa4heepuumAieS4reagt+W8jwogICAgY2xlYXJTZWxlY3RlZCgpIHsKICAgICAgbGV0IGFsbE5vZGUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCcjdHJlZS1vcHRpb24gLmVsLXRyZWUtbm9kZScpCiAgICAgIGFsbE5vZGUuZm9yRWFjaCgoZWxlbWVudCkgPT4gZWxlbWVudC5jbGFzc0xpc3QucmVtb3ZlKCdpcy1jdXJyZW50JykpCiAgICB9LAogIH0sCiAgd2F0Y2g6IHsKICAgIG9wdGlvbnMoKSB7CiAgICAgIHRoaXMudmFsdWVJZCA9IHRoaXMudmFsdWUKICAgICAgdGhpcy5pbml0SGFuZGxlKCkKICAgIH0sCiAgfSwKfQo="},{"version":3,"sources":["one-tree-select.vue"],"names":[],"mappings":";AA0BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"one-tree-select.vue","sourceRoot":"docs/.vuepress/components","sourcesContent":["<template>\n  <el-select\n    ref=\"elSelect\"\n    :value=\"valueTitle\"\n    :disabled=\"disabled\"\n    :clearable=\"clearable\"\n    :placeholder=\"placeholder\"\n    @clear=\"clearHandle\"\n  >\n    <el-option :value=\"valueTitle\" :label=\"valueTitle\" class=\"options\">\n      <el-tree\n        id=\"tree-option\"\n        ref=\"selectTree\"\n        :props=\"props\"\n        :data=\"options\"\n        :accordion=\"accordion\"\n        :node-key=\"props.value\"\n        :default-expanded-keys=\"defaultExpandedKey\"\n        @node-click=\"handleNodeClick\"\n      >\n      </el-tree>\n    </el-option>\n  </el-select>\n</template>\n\n<script>\nexport default {\n  name: 'one-tree-select',\n  props: {\n    // 配置项\n    props: {\n      type: Object,\n      default: () => {\n        return {\n          value: 'id', // ID字段名\n          label: 'title', // 显示名称\n          children: 'children', // 子级字段名\n        }\n      },\n    },\n    // 选项列表数据(树形结构的对象数组)\n    options: {\n      type: Array,\n      default: () => {\n        return []\n      },\n    },\n    // 下拉初始值\n    value: {\n      type: String,\n      default: '',\n    },\n    // 可清空选项\n    clearable: {\n      type: Boolean,\n      default: true,\n    },\n    // 是否禁用\n    disabled: {\n      type: Boolean,\n      default: false,\n    },\n    // 占位符号\n    placeholder: {\n      type: String,\n      default: '',\n    },\n    // 是否收起\n    accordion: {\n      type: Boolean,\n      default: false,\n    },\n  },\n  data() {\n    return {\n      valueTitle: '', // 下拉框显示名称\n      valueId: null, // 初始Id\n      defaultExpandedKey: [], // 默认展开节点数组\n    }\n  },\n  mounted() {\n    this.valueId = this.value, // 初始值\n    this.initHandle()\n  },\n  methods: {\n    // 初始化\n    initHandle() {\n      this.valueId = this.value\n      if (this.valueId && this.options.length > 0) {\n        this.$nextTick(function () {\n          this.valueTitle = this.$refs.selectTree.getNode(this.valueId).data[this.props.label] // 初始化显示label\n          this.$refs.selectTree.setCurrentKey(this.valueId) // 设置默认选中\n          this.defaultExpandedKey = [this.valueId] // 设置默认展开\n          this.$emit('getValue',this.$refs.selectTree.getNode(this.valueId).data)\n        })\n      }\n      this.initScroll()\n    },\n\n    // 初始化滚动条\n    initScroll() {\n      this.$nextTick(() => {\n        let scrollWrap = document.querySelectorAll('.el-scrollbar .el-select-dropdown__wrap')[0]\n        let scrollBar = document.querySelectorAll('.el-scrollbar .el-scrollbar__bar')\n        scrollWrap.style.cssText = 'margin: 0px; max-height: none; overflow: hidden;'\n        scrollBar.forEach((el) => (el.style.width = 0))\n      })\n    },\n    // 切换选项\n    handleNodeClick(node) {\n      this.valueTitle = node[this.props.label] // 设置label\n      this.valueId = node[this.props.id] // 设置id\n      this.defaultExpandedKey = []\n      this.$emit('getValue', node)\n      this.$refs.elSelect.visible = false\n    },\n    // 清除选中\n    clearHandle() {\n      this.valueTitle = ''\n      this.valueId = null\n      this.defaultExpandedKey = []\n      this.clearSelected()\n      this.$emit('getValue', null)\n    },\n    // 清空选中样式\n    clearSelected() {\n      let allNode = document.querySelectorAll('#tree-option .el-tree-node')\n      allNode.forEach((element) => element.classList.remove('is-current'))\n    },\n  },\n  watch: {\n    options() {\n      this.valueId = this.value\n      this.initHandle()\n    },\n  },\n}\n</script>\n<style scoped>\n.el-scrollbar .el-scrollbar__view .el-select-dropdown__item {\n  height: auto;\n  max-height: 274px;\n  padding: 0;\n  overflow: hidden;\n  overflow-y: auto;\n}\n.el-select-dropdown__item.selected {\n  font-weight: normal;\n}\nul li >>> .el-tree .el-tree-node__content {\n  height: auto;\n  padding: 0 20px;\n}\n.el-tree-node__label {\n  font-weight: normal;\n}\n.el-tree >>> .is-current .el-tree-node__label {\n  color: #409eff;\n  font-weight: 700;\n}\n.el-tree >>> .is-current .el-tree-node__children .el-tree-node__label {\n  color: #606266;\n  font-weight: normal;\n}\n</style>"]}]}